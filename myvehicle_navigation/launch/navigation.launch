<launch>

    <!-- Map config file -->
    <arg name="name" default="demo_world"/>
    <arg name="map" default="$(find gazebo_worlds)/map/$(arg name).yaml" /> 
    <arg name="semantic_map" default="$(find gazebo_worlds)/map/$(arg name)_semantic.yaml" /> 
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" />

    <!-- Load map -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map)" />

    <!-- Load semantic map-->
    <node name="semantic_map_server" pkg="semantic_map" type="semantic_server.py" args="-f $(arg semantic_map)" />

    <!-- Run AMCL for localization -->
    <include file="$(find myvehicle_navigation)/launch/amcl.launch" />

    <!-- Auto initial pose localization -->
    <!-- <node pkg="rosservice" type="rosservice" name="rosservice" args="call /request_nomotion_update"/> -->

    <!-- Run global planner -->
    <include file="$(find myvehicle_navigation)/launch/global_planner.launch"/>

    <!-- Run local planner -->
    <include file="$(find myvehicle_navigation)/launch/local_planner.launch"/>

    <!-- Navigation using move_base-->
    <!-- <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
        <arg name="model" value="$(arg model)" />
        <arg name="move_forward_only" value="true"/>
    </include> -->

    <!-- Navigation using simple drl planner-->
    <!-- <node pkg="myvehicle_navigation" type="drl_planner.py" name="drl_planner" output="screen"/> -->

    <!--Yolo detector-->
    <node name="yolo_detector" pkg="vision_detector" type="detector.py"/>

    <!-- Run rviz-->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find myvehicle_navigation)/rviz/nav.rviz"/>



</launch>